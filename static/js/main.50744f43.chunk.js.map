{"version":3,"sources":["actions/index.js","components/postIndex.js","components/PostNew.js","components/postShow.js","reducers/reducerPost.js","reducers/index.js","index.js"],"names":["FETCH_POSTS","FETCH_POST","CREATE_POST","DELETE_POST","URL","KEY","a","axios","get","request","type","payload","values","callback","post","then","id","delete","PostIndex","this","props","fetchposts","_","map","posts","className","to","title","style","display","justifyContent","marginTop","marginBottom","renderPosts","React","Component","connect","state","PostNew","onSubmit","createPost","history","push","field","meta","touched","error","label","placeholder","input","handleSubmit","Field","name","component","renderField","reduxForm","validate","errors","categories","content","form","PostShow","onDeleteClick","match","params","deletePost","fetchPost","onClick","ownProps","PostReducer","action","data","mapKeys","omit","rootReducer","combineReducers","formReducer","createStoreWithMiddleware","applyMiddleware","promise","createStore","ReactDOM","render","store","reducers","path","document","querySelector"],"mappings":"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","file":"static/js/main.50744f43.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const FETCH_POSTS = 'fetch_posts';\r\nexport const FETCH_POST = 'fetch_post';\r\nexport const CREATE_POST = 'create_post';\r\nexport const DELETE_POST = 'delete_post';\r\n\r\nconst URL = \"https://reduxblog.herokuapp.com/api\"\r\nconst KEY = \"?key=dipsapp\"\r\n\r\n\r\nexport async function fetchposts()\r\n\r\n{\r\n    const request = await axios.get(`${URL}/posts${KEY}`);\r\n    return {\r\n        type :FETCH_POSTS,\r\n        payload : request\r\n    };\r\n}\r\n \r\nexport default async function createpost(values ,callback) {\r\n    const request = await axios.post(`${URL}/posts${KEY}`,values).then(() => callback());\r\n    return{\r\n        type : CREATE_POST,\r\n        payload : request\r\n    }\r\n}\r\n\r\n\r\nexport async function fetchPost(id){\r\n\r\n    const request = await axios.get(`${URL}/posts/${id}${KEY}`)\r\n    return{\r\n         type : FETCH_POST,\r\n         payload : request\r\n    }\r\n}\r\n\r\nexport async function deletePost(id , callback){\r\n    const request = await axios.delete(`${URL}/posts/${id}${KEY}`).then(()=> callback());\r\n    return {\r\n        type : DELETE_POST,\r\n        payload : id\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { fetchposts } from \"../actions\";\r\nimport { Link } from 'react-router-dom';\r\nimport _ from \"lodash\";\r\nimport \"../style.css\"\r\n\r\nclass PostIndex extends React.Component{\r\n\r\n    componentDidMount()\r\n    {\r\n         this.props.fetchposts();\r\n    }\r\n\r\n    renderPosts()\r\n    {\r\n    \r\n\r\n      return  _.map(this.props.posts , post =>{\r\n            return(\r\n                <li className=\"list-unstyled m-2\" key = {post.id}>\r\n                    <Link className=\" d-flex ms-5 me-5 justify-content-center btn btn-outline-info btn-lg btn-block\"  to={`/posts/${post.id}`} >\r\n                    {post.title}\r\n                    </Link>\r\n                </li>\r\n            )\r\n        });\r\n    } \r\n    render()\r\n    {\r\n        const style = {\r\n            display : \"flex\",\r\n            justifyContent : \"center\",\r\n            marginTop : \"20px\",\r\n            marginBottom : \"20px\",\r\n        }\r\n        return(<div className=\"container m-5\">\r\n            <div className=\"d-flex justify-content-end\"> \r\n                <Link to=\"/posts/new\" className=\"btn btn-pri btn-lg me-5\">\r\n                    Add a post\r\n                </Link>\r\n            </div>\r\n            <h3 style={style} className=\"post\" >POSTS</h3>\r\n            <ul className=\"list-group\" >\r\n                {this.renderPosts()}\r\n            </ul>\r\n        </div>);\r\n    }\r\n} \r\n\r\nfunction mapStateToProps(state){\r\n    return {posts : state.posts}\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{ fetchposts })(PostIndex);","import React from 'react';\r\nimport { Field , reduxForm } from 'redux-form'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport  createPost  from '../actions/index'\r\nimport \"../style.css\"\r\n\r\n\r\n\r\nclass PostNew extends React.Component {\r\n\r\n\r\n\r\n   renderField(field)\r\n    {\r\n\r\n        const className = `form-control ${field.meta.touched && field.meta.error ? \"border border-danger\" : ''}`\r\n        return(\r\n            <div className=\"m-5 container form-group\">\r\n                <h5 className=\"label\" >{field.label}</h5>\r\n                <input className={className} type=\"text\" placeholder= {\"ENTER\"  + \" \" +  field.label}\r\n                    {...field.input}\r\n                />\r\n                <div className=\"text-danger\"   >\r\n                {field.meta.touched ? field.meta.error : ''}\r\n                </div>\r\n            </div>\r\n        )\r\n    } \r\n\r\n\r\n    onSubmit = (values) =>{\r\n        this.props.createPost(values,()=>{\r\n            this.props.history.push(\"/\")\r\n        });\r\n    }\r\n \r\n    render()\r\n\r\n    {\r\n\r\n        const { handleSubmit } = this.props;\r\n\r\n        return(\r\n             <form onSubmit = {handleSubmit(this.onSubmit)} >\r\n                <Field label=\"TITLE\" name=\"title\" component = {this.renderField}  >\r\n                                 \r\n                </Field>\r\n                <Field label=\"CATEGORIES\" name=\"categories\" component = {this.renderField}  >\r\n                                 \r\n                </Field>\r\n                <Field label=\"POST'S CONTENT\" name=\"content\" component = {this.renderField}  >\r\n                                 \r\n                </Field>\r\n                <button type=\"submit\" className=\"btn btn-primary  ms-5\">Submit</button>\r\n                <Link to='/' className=\"btn btn-danger ms-3\" >Cancel</Link>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nfunction validate(values) \r\n{\r\n     const errors = {};\r\n\r\n     if(!values.title)\r\n     {\r\n         errors.title = \"please enter a title\"\r\n     }\r\n     if(!values.categories)\r\n     {\r\n         errors.categories = \"enter a category\"\r\n     }\r\n     if(!values.content)\r\n     {\r\n         errors.content = \"enter some content\"\r\n     }\r\n\r\n\r\n     return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form:'PostsNewForm'\r\n})(\r\n    \r\n   connect(null,{ createPost })(PostNew)\r\n    \r\n    ); ","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n import { fetchPost , deletePost } from \"../actions\"\r\n import { Link } from 'react-router-dom'\r\n import \"../style.css\"\r\n\r\nclass PostShow extends React.Component {\r\n\r\n  componentDidMount(){\r\n      if(!this.props.post){\r\n        const { id } = this.props.match.params;\r\n        this.props.fetchPost(id , ()=>{\r\n            this.props.history.push('/');\r\n        });\r\n      }\r\n     \r\n  }\r\n  onDeleteClick = () => {\r\n     \r\n\r\n    const { id } = this.props.match.params;\r\n    this.props.deletePost(id,()=>{\r\n        this.props.history.push('/');\r\n    });\r\n    \r\n}\r\n \r\n\r\n    render()\r\n    {\r\n\r\n\r\n        const { post } = this.props;\r\n\r\n        if(!post)\r\n        {\r\n            return (<div>Loading...</div>)\r\n        }\r\n        return(<div className=\"container m-5\">\r\n                <Link to=\"/\" className=\"btn btn-show\" >Home</Link>\r\n                <button className=\"d-flex btn btn-del btn-danger\" onClick={this.onDeleteClick} >\r\n                    Delete Post\r\n                </button>\r\n                <h3 className=\"title\" >{post.title}</h3>\r\n                <div className=\"categories\" ><h6>{post.categories}</h6></div>\r\n                <div className=\"content container\" ><p>{post.content}</p></div>\r\n        </div>);\r\n\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ posts } , ownProps){\r\n    return { post : posts[ownProps.match.params.id]};\r\n}\r\n\r\nexport default connect(mapStateToProps,{ fetchPost , deletePost })(PostShow);","import { FETCH_POSTS ,FETCH_POST , DELETE_POST } from \"../actions\";\r\nimport _ from \"lodash\";\r\n\r\nconst PostReducer = (state={}, action )=>{\r\n    switch(action.type) {\r\n        case FETCH_POST:\r\n            return { ...state , [action.payload.data.id] : action.payload.data}\r\n        case FETCH_POSTS:\r\n             return _.mapKeys(action.payload.data , 'id');\r\n             case DELETE_POST : \r\n                return _.omit(state, action.payload)\r\n         \r\n        default : \r\n             return state;    \r\n    }\r\n}\r\n\r\nexport default PostReducer;","import { combineReducers } from 'redux';\nimport PostReducer from \"./reducerPost\"\nimport {reducer  as formReducer} from 'redux-form';\n\nconst rootReducer = combineReducers({\n  posts : PostReducer,\n  form : formReducer\n});\n\nexport default rootReducer;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { HashRouter , Route ,Switch } from \"react-router-dom\"\nimport PostIndex from \"./components/postIndex\"\nimport promise from 'redux-promise'\nimport PostNew from \"./components/PostNew\"\nimport PostShow from \"./components/postShow\"\n\n\nimport reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\n\n\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(reducers)}>\n\n   \n   <HashRouter>\n    <div>\n      <Switch>\n     <Route path=\"/posts/new\"  component={PostNew} ></Route>\n    <Route path=\"/posts/:id\"  component={PostShow} ></Route>\n    <Route path=\"/\" component={PostIndex} ></Route>\n     </Switch>\n   </div>\n   </HashRouter>\n  \n  </Provider>\n  , document.querySelector('#root'));\n"],"sourceRoot":""}